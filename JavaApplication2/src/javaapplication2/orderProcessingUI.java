/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication2;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Rafi
 */
public class orderProcessingUI extends javax.swing.JFrame {

    /**
     * Creates new form orderProcessingUI
     */
    
    Connection conn = null;
    Statement st = null;
    PreparedStatement stmt =null;
    ResultSet rs =null;
    ResultSetMetaData rsmd =null;
    
    public orderProcessingUI() {
        initComponents();
        connect();
        
    }
    
     public void connect(){
   
               
  System.out.println("MySQL Connect Example.");
  String url = "jdbc:derby://localhost:1527/";
  String dbName = "asas";
  String driver = "org.apache.derby.jdbc.ClientDriver";
  String userName = "root"; 
  String password = "root";
  try {
  Class.forName(driver).newInstance();
  conn = DriverManager.getConnection(url+dbName,userName,password);
  System.out.println("Connected to the database");
  st = conn.createStatement();
  
  } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException e) {
  e.printStackTrace();
  }
  
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        processOrderButton = new javax.swing.JButton();
        productIdText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        quantityText = new javax.swing.JTextField();
        returnManiMenuButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        checkButton = new javax.swing.JButton();
        productNameLabel = new javax.swing.JLabel();
        availabilityText = new javax.swing.JTextField();
        totalTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        priceTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 3, 18)); // NOI18N
        jLabel1.setText("Staff Corner.....................");

        processOrderButton.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        processOrderButton.setForeground(new java.awt.Color(255, 0, 0));
        processOrderButton.setText("Process Order!!");
        processOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processOrderButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 51, 51));
        jLabel2.setText("Product ID");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 51, 51));
        jLabel3.setText("Quantity ");

        quantityText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityTextActionPerformed(evt);
            }
        });

        returnManiMenuButton.setText("<<Return to main page");
        returnManiMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnManiMenuButtonActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 51, 51));
        jLabel4.setText("Availability");

        checkButton.setText("Check");
        checkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkButtonActionPerformed(evt);
            }
        });

        productNameLabel.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N

        availabilityText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                availabilityTextActionPerformed(evt);
            }
        });

        totalTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalTextFieldActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 51, 102));
        jLabel5.setText("Total");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 51));
        jLabel6.setText("Unit Cost");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3))
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(processOrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(returnManiMenuButton)
                        .addGap(27, 27, 27))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(productNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(354, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(totalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(priceTextField)
                            .addComponent(availabilityText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                            .addComponent(productIdText, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(quantityText, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(checkButton)
                        .addGap(68, 68, 68))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(productIdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(checkButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(productNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(availabilityText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quantityText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(totalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(returnManiMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(processOrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void quantityTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityTextActionPerformed

    private void availabilityTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_availabilityTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_availabilityTextActionPerformed

    private void returnManiMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnManiMenuButtonActionPerformed
        
        loginUI lin1 = new loginUI();
        lin1.setVisible(true);
        try {
            rs.close();
             st.close();
        conn.close();
        this.dispose();
        } catch (SQLException ex) {
            Logger.getLogger(orderProcessingUI.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        
        
    }//GEN-LAST:event_returnManiMenuButtonActionPerformed

    private void processOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processOrderButtonActionPerformed
        String TID = productIdText.getText();
        int PID = Integer.parseInt(TID);
        int total=0;
        String quantityyy= quantityText.getText();
        int quan = Integer.parseInt(quantityyy);
        
        try {
        
          st =conn.createStatement();
          String query ="SELECT PRODID,PRODUCTNAME,QUANTITY,PRICE FROM PRODUCTCATALOGUE2 WHERE PRODID=" + PID + "";
          stmt =conn.prepareStatement(query);
          rs=st.executeQuery(query);
        
        
            rs=st.executeQuery(query);
            rsmd=rs.getMetaData();           
           
          while (rs.next()){
           
           // int quantity =rs.getInt("QUANTITY");
         //  System.out.println(quantity);
             int price =rs.getInt("PRICE");
             System.out.println(price);
             total=quan *price;  
                
            // conn.close();
              
             //   System.out.println(id + "\t\t"+ ProductNamE + "\t\t" + Des + "\t\t" + quantity + "\t\t"  + "\t\t" +deal + "\t\t" +price);
                
            }
            
            totalTextField.setText(Integer.toString(total));
            
      ;
            
        } catch (SQLException ex) {
            Logger.getLogger(orderProcessingUI.class.getName()).log(Level.SEVERE, null, ex);
        }
   
        
    }//GEN-LAST:event_processOrderButtonActionPerformed

    private void checkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkButtonActionPerformed
        // TO*****************************************************
        //**********************************************************
        String TID = productIdText.getText();
        int PID = Integer.parseInt(TID);
        System.out.println(PID);

        
         try {
             st =conn.createStatement();
            //String query ="SELECT PRODID,QUANTITY FROM PRODUCTCATALOGUE2 WHERE PRODID=?";
          String query ="SELECT PRODID,PRODUCTNAME,QUANTITY,PRICE FROM PRODUCTCATALOGUE2 WHERE PRODID=" + PID + "";
            stmt =conn.prepareStatement(query);
          //  stmt.setInt(1, Integer.parseInt(productIdText.getText()));
          rs=st.executeQuery(query);
          

           // System.out.println(query);
       //   rs=st.executeQuery(query);
             System.out.println("sdsds");
           // rsmd=rs.getMetaData();
           // int numberCols =rsmd.getColumnCount();
           // System.out.println(numberCols);
           
           // System.out.println("\n----------------------");
            while (rs.next()){
              //  int id =rs.getInt(1);
                String productnamee = rs.getString("PRODUCTNAME"); 
                String quantityy = rs.getString("QUANTITY");
                String pricee =rs.getString("PRICE");
                
               // System.out.println(productnamee);
                   // System.out.println(quantityy);
                    productNameLabel.setText(productnamee);
                    availabilityText.setText(quantityy);
                    priceTextField.setText(pricee);
                
           
                
            }
       /* rs.close();
        st.close();
        conn.close();
            */
            
        } catch (SQLException ex) {
            Logger.getLogger(orderProcessingUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        
        
    }//GEN-LAST:event_checkButtonActionPerformed

    private void totalTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalTextFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(orderProcessingUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(orderProcessingUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(orderProcessingUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(orderProcessingUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new orderProcessingUI().setVisible(true);
            }
        }); 
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField availabilityText;
    private javax.swing.JButton checkButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField priceTextField;
    private javax.swing.JButton processOrderButton;
    private javax.swing.JTextField productIdText;
    private javax.swing.JLabel productNameLabel;
    private javax.swing.JTextField quantityText;
    private javax.swing.JButton returnManiMenuButton;
    private javax.swing.JTextField totalTextField;
    // End of variables declaration//GEN-END:variables
}
/*CON.Open();
               SqlCommand cmd1 = new SqlCommand("SELECT Name,Price FROM Product WHERE ProductID='" + textBox1.Text + "'", CON);
               String query ="SELECT PRODID,QUANTITY FROM PRODUCTCATALOGUE2 WHERE PRODID='" + PID + "'";
               SqlDataReader usernameRdr = null;
               usernameRdr = cmd1.ExecuteReader();

               while (usernameRdr.Read())
               {
                   string name = Convert.ToString(usernameRdr["name"]);
                   string price = Convert.ToString(usernameRdr["Price"]);
                   double Price_ = Double.Parse(price);
                   double Quantity = Double.Parse(textBox4.Text);
                   double total = Price_ * Quantity;

                   totalPrice = totalPrice + total;
                   label1.Text = totalPrice.ToString();

                   vat = totalPrice * .15;
                   label3.Text = vat.ToString();

                   totalwithvat = totalPrice + vat;
                   label4.Text = totalwithvat.ToString();

                  
                   CON.Close();

                   dt.Rows.Add(textBox1.Text, name, price, textBox4.Text,total.ToString());
                   dataGridView1.DataSource=dt;
                   usernameRdr = null;
                
               }
            }catch(Exception )
            {
            }*/